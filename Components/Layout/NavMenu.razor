<!--Header-->
<header class="header">
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <img src="img/logo.png" style="width: 100%;" alt="logo">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse text-center justify-content-end" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a href="/"><img class="menu-icons-item" src="img/home.png">Главная</a>
                    </li>
                    <li class="nav-item">
                        <a href="/products"><img class="menu-icons-item" src="img/products.png">Товары</a>
                    </li>
                    <AuthorizeView>
                        <Authorized>
                            <li class="nav-item">
                                <a href="/cart"><img class="menu-icons-item" title="Корзина" alt="cart" src="img/cart.png">
                                    Корзина <span class="badge text-bg-danger">@ProductCountInCart</span>
                                </a>
                            </li>
                        </Authorized>
                    </AuthorizeView>
                    <li class="nav-item">
                        <div class="dropdown">
                            <button class="dropbtn">
                                <img class="menu-icons-item" alt="profile" src="img/profile.png">
                                Профиль
                            </button>
                            <div class="dropdown-content">
                                <AuthorizeView>
                                    <Authorized>
                                        <a class="dropdown-item drop-item" title="Посмотреть профиль" href="/profile">Посмотреть профиль</a>
                                        <a class="dropdown-item drop-item" title="Выйти" href="/logout">Выйти</a>
                                    </Authorized>
                                    <NotAuthorized>
                                        <a class="dropdown-item drop-item" title="Войти" href="/login">Войти</a>
                                        <a class="dropdown-item drop-item" title="Зарегистрироваться" href="/registration">Зарегистрироваться</a>
                                    </NotAuthorized>
                                </AuthorizeView>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    @* <div class="header-main">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6">
                    <a class="navbar-brand" href="/">
                        <img src="img/logo.png" alt="logo" width="256" height="100%">
                    </a>
                </div>
                <div class="col-md-6">
                    <div class="menu-item d-flex justify-content-end">
                        <div class="d-flex align-items-center">
                            <ul class="menu-icons d-flex justify-content-center">
                                <li><a href="/"><img class="menu-icons-item" title="Главная страница" alt="home" src="img/home.png"></a></li>
                                <li><a href="/products"><img class="menu-icons-item" title="Товары" alt="products" src="img/products.png"></a></li>
                                <AuthorizeView>
                                    <Authorized>
                                        <li><a href="/cart"><img class="menu-icons-item" title="Корзина" alt="cart" src="img/cart.png"><span class="badge text-bg-danger">@ProductCountInCart</span></a></li>
                                    </Authorized>
                                </AuthorizeView>
                                <li>
                                    <div class="dropdown" style="float:right;">
                                        <button class="dropbtn">
                                            <img class="menu-icons-item" alt="profile" src="img/profile.png">
                                        </button>
                                        <div class="dropdown-content">
                                            <AuthorizeView>
                                                <Authorized>
                                                    <a class="dropdown-item drop-item" title="Посмотреть профиль" href="/profile">Посмотреть профиль</a>
                                                    <a class="dropdown-item drop-item" title="Выйти" href="/logout">Выйти</a>
                                                </Authorized>
                                                <NotAuthorized>
                                                    <a class="dropdown-item drop-item" title="Войти" href="/login">Войти</a>
                                                    <a class="dropdown-item drop-item" title="Зарегистрироваться" href="/registration">Зарегистрироваться</a>
                                                </NotAuthorized>
                                            </AuthorizeView>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div> *@
</header>
<!-- #endregion -->
@code {
    private List<System.Security.Claims.Claim> ClaimsList = new();
    private ApplicationUser User = new();
    private int ProductCountInCart;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            var authState = customAuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.Result.User;
            if (user.Identity is not null && user.Identity.IsAuthenticated)
            {
                ClaimsList = authState.Result.User.Claims.ToList();
                var Email = ClaimsList[1].Value;
                User = await account.GetUser(Email);
                await GetCartProduct(User.Id);
            }
        }
        catch{}
    }

    private async Task GetCartProduct(Guid userId)
    {
        var CartUserList = await cartService.GetCartByIdUserAsync(userId);
        if(CartUserList.Count > 0)
        {
            ProductCountInCart += CartUserList.Count();
        }
    }
}