
@page "/login"

@rendermode InteractiveServer
<div class="container">
    <div class="row">
        <div class="col-sm-4">
            <h2>Войти в приложение</h2>
            <EditForm Model="@LoginDto" OnValidSubmit="LoginClicked">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label class="form-label">E-mail адрес</label>
                    <InputText @bind-Value="LoginDto.Email" class="form-control"></InputText>
                </div>
                <div class="form-group mt-3">
                    <label class="form-label">Пароль</label>
                    <InputText type="password" @bind-Value="LoginDto.Password" class="form-control"></InputText>
                </div>
                <div class="form-group mt-3">
                    <button class="btn btn-primary" type="submit">Войти</button>
                </div>
                <ValidationSummary />
            </EditForm>
        </div>
    </div>
</div>

@code{
    public LoginDTO LoginDto = new();

    async Task LoginClicked()
    {
        LoginResponse response = await accountService.LoginAsync(LoginDto);
        if (!response.Flag)
        {
            await js.InvokeVoidAsync("alert", response.Message);
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        customAuthStateProvider.UpdateAuthenticationState(response.JWTToken);
        NavManager.NavigateTo("/", forceLoad: true);
    }
}