@page "/profile"
@using System.Text.Json
@using TMKStore.Models

<PageTitle>Профиль</PageTitle>

<main class="main d-flex justify-content-center">
    <AuthorizeView>
        <Authorized>
            <div class="container">
                <div class="row">
                    <div class="col-lg-4">
                        <div class="card mb-4">
                            <div class="card-body text-center">
                                <img src="/img/profile-img.png"
                                alt="avatar" class="rounded-circle img-fluid" style="width: 150px;">
                                <h5 class="my-3">@User.Name</h5>
                                <p class="text-muted mb-4">@User.Email</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-8">
                        <div class="card mb-4">
                            <div class="card-header text-center">
                                Мои заказы
                            </div>
                            <div class="card-body" style="overflow: auto;">
                                <table class="table order-table">
                                    @if (OrdersList.Count > 0)
                                    {
                                        <thead>
                                            <tr class="text-center">
                                                <th scope="col">№ заказа</th>
                                                <th scope="col">Дата оформления заказа</th>
                                                <th scope="col">Сумма, BYN</th>
                                                <th scope="col"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var order in OrdersList.OrderBy(o => o.DateTime).DistinctBy(o => o.UniqueGuid))
                                            {
                                                <tr class="text-center">
                                                    <td scope="row">@OrderNumber</td>
                                                    <td>@order.DateTime.ToString("dd-MM-yyyy")</td>
                                                    @if (PriceOrder.ContainsKey(order.UniqueGuid))
                                                    {
                                                        <td>@PriceOrder[order.UniqueGuid]</td>
                                                    }
                                                    <td><a href="#" class="btn btn-warning">Посмотреть</a></td>
                                                </tr>
                                                @if(OrderNumber == OrderNumber)
                                                {
                                                    OrderNumber++;
                                                }
                                            }
                                        </tbody>
                                    }
                                    else
                                    {
                                        <tbody>
                                            <tr class="text-center">
                                                <td>Вы ничего не заказывали</td>
                                            </tr>
                                        </tbody> 
                                    }
                                </table>
                            </div>
                            <div class="card-footer text-muted d-flex justify-content-end">
                                <p>Итого по заказам: <b>@TotalCost</b> BYN</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </Authorized>
        <NotAuthorized>
            <Login />
        </NotAuthorized>
    </AuthorizeView>
</main>


@code {
    private List<System.Security.Claims.Claim> ClaimsList = new();
    private ApplicationUser User = new();
    private List<Order> OrdersList = new();
    private Dictionary<Guid,decimal> PriceOrder = new();
    private IEnumerable<Order> uniqueOrders;
    private decimal TotalCost;
    private int OrderNumber = 1;

    protected override async Task OnInitializedAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        var authState = customAuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.Result.User;
        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            ClaimsList = authState.Result.User.Claims.ToList();
            var Email = ClaimsList[1].Value;
            User = await account.GetUser(Email);
        }
        await GetOrders(User.Id);
    }

    private async Task GetOrders(Guid userId)
    {
        var orders = await orderInterface.GetOrdersUserByIdAsync(userId);
        if(orders.Count > 0)
        {
            foreach (var order in orders)
            {
                if (PriceOrder.ContainsKey(order.UniqueGuid))
                {
                    PriceOrder[order.UniqueGuid] += order.ProductPrice;
                }
                else
                {
                    PriceOrder.Add(order.UniqueGuid, order.ProductPrice);
                }
                OrdersList.Add(order);
                TotalCost += order.ProductPrice;
            }
        }
    }
}